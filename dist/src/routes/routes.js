"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const personController_1 = __importDefault(require("../controller/personController"));
const projectController_1 = __importDefault(require("../controller/projectController"));
const companyController_1 = __importDefault(require("../controller/companyController"));
const reportController_1 = __importDefault(require("../controller/reportController"));
const jwt_1 = __importDefault(require("../middleware/jwt"));
const authController_1 = __importDefault(require("../controller/authController"));
const emailController_1 = __importDefault(require("../controller/emailController"));
const projectMemberController_1 = __importDefault(require("../controller/projectMemberController"));
const notificationController_1 = __importDefault(require("../controller/notificationController"));
// import NotificationService from "../service/NotificationService";
const router = express_1.default.Router();
router.post('/login', authController_1.default.login);
router.get('/person', jwt_1.default.allowAdmin, personController_1.default.get);
router.get('/person-not-in/project', jwt_1.default.allowAdmin, personController_1.default.listNotInProject);
router.get('/person-list', jwt_1.default.allowAdmin, personController_1.default.list);
router.get('/person/:id', jwt_1.default.allowAdmin, personController_1.default.getById);
router.post('/person/create', jwt_1.default.allowAdmin, personController_1.default.create);
router.patch('/person/update/:id', jwt_1.default.allowAdmin, personController_1.default.update);
router.get('/project', jwt_1.default.allowAdmin, projectController_1.default.get);
router.get('/project/:id', jwt_1.default.allowAdmin, projectController_1.default.getByid);
router.post('/project/create', jwt_1.default.allowAdmin, projectController_1.default.create);
router.patch('/project/update/:id', jwt_1.default.allowAdmin, projectController_1.default.update);
router.delete('/project/delete/:id', jwt_1.default.allowAdmin, projectController_1.default.remove);
router.post('/project/member-assign', jwt_1.default.allowAdmin, projectController_1.default.assignProject);
router.post('/project/member-unassign', jwt_1.default.allowAdmin, projectController_1.default.unassignProject);
router.get('/company', jwt_1.default.allowAdmin, companyController_1.default.get);
router.get('/company-list', jwt_1.default.allowAdmin, companyController_1.default.list);
router.get('/company/:id', jwt_1.default.allowAdmin, companyController_1.default.getByid);
router.post('/company/create', jwt_1.default.allowAdmin, companyController_1.default.create);
router.patch('/company/update/:id', jwt_1.default.allowAdmin, companyController_1.default.update);
router.get('/report', jwt_1.default.allowAdmin, reportController_1.default.get);
router.get('/report-draft-count', jwt_1.default.allowAdmin, reportController_1.default.countDraft);
router.get('/report/:id', jwt_1.default.allowAdmin, reportController_1.default.getByid);
router.post('/report/create', jwt_1.default.allowAdmin, reportController_1.default.create);
router.patch('/report/update-detail/:id', jwt_1.default.allowAdmin, reportController_1.default.updateReportDetail);
router.delete('/report/delete/:id', jwt_1.default.allowAdmin, reportController_1.default.removeReport);
router.delete('/report/delete-detail/:id', jwt_1.default.allowAdmin, reportController_1.default.removeReportDetail);
router.post("/send-email", jwt_1.default.allowAdmin, emailController_1.default.sendEmail);
router.get('/project-member', jwt_1.default.allowAdmin, projectMemberController_1.default.getMemberByProjectId);
router.post('/project-member/assign-unassign', jwt_1.default.allowAdmin, projectMemberController_1.default.assignUnassignMemberProject);
router.post('/notification/send-to-admins', notificationController_1.default.sendNotificationToAdmins);
router.patch('/notification/read/:notifId', notificationController_1.default.markAsRead);
router.patch('/notification/read-all', notificationController_1.default.markAllAsRead);
exports.default = router;
//# sourceMappingURL=routes.js.map